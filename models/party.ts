/*
UniCourt Enterprise APIs

<button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button>


The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AttorneyRepresentationType } from './attorney-representation-type';
import { Contact } from './contact';
import { PartyAttorneyAssociations } from './party-attorney-associations';
import { PartyRole } from './party-role';
import { PossibleNormParty } from './possible-norm-party';

/**
 * 
 * @export
 * @interface Party
 */
export interface Party {
    /**
     * 
     * @type {AttorneyRepresentationType}
     * @memberof Party
     */
    'attorneyRepresentationType': AttorneyRepresentationType | null;
    /**
     * 
     * @type {Contact}
     * @memberof Party
     */
    'contact': Contact;
    /**
     * When was the party first fetched from the court site.
     * @type {string}
     * @memberof Party
     */
    'firstFetchDate': string;
    /**
     * First name of the party. This is normalized by UniCourt.
     * @type {string}
     * @memberof Party
     */
    'firstName': string | null;
    /**
     * Signifies if the party as this party type is currently isVisible or not for the case.
     * @type {boolean}
     * @memberof Party
     */
    'isVisible': boolean;
    /**
     * When was the party last fetched from the court site.
     * @type {string}
     * @memberof Party
     */
    'lastFetchDate': string;
    /**
     * Last name of the party. This is normalized by UniCourt.
     * @type {string}
     * @memberof Party
     */
    'lastName': string | null;
    /**
     * Middle name of the party. This is normalized by UniCourt.
     * @type {string}
     * @memberof Party
     */
    'middleName': string | null;
    /**
     * Name of the party as provided by Court.
     * @type {string}
     * @memberof Party
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Party
     */
    'namePrefix': string | null;
    /**
     * 
     * @type {string}
     * @memberof Party
     */
    'nameSuffix': string | null;
    /**
     * Name of the object
     * @type {string}
     * @memberof Party
     */
    'object': string;
    /**
     * 
     * @type {PartyAttorneyAssociations}
     * @memberof Party
     */
    'partyAttorneyAssociations': PartyAttorneyAssociations | null;
    /**
     * To know the type of an entity in a case, if it is an Individual, Company or Other. An entity to a case could be the parties, attorneys or judges involved.
     * @type {string}
     * @memberof Party
     */
    'partyClassificationType': PartyPartyClassificationTypeEnum;
    /**
     * ID for the party in this case. This ID is unique within a case and NOT across cases. If the same party were to appear in another case this ID would be different.
     * @type {string}
     * @memberof Party
     */
    'partyId': string;
    /**
     * 
     * @type {PartyRole}
     * @memberof Party
     */
    'partyRole': PartyRole | null;
    /**
     * 
     * @type {Array<PossibleNormParty>}
     * @memberof Party
     */
    'possibleNormPartyArray': Array<PossibleNormParty>;
    /**
     * Party Type as provided by Court.
     * @type {string}
     * @memberof Party
     */
    'sourcePartyRole': string;
}

type PartyPartyClassificationTypeEnum = 'INDIVIDUAL' | 'COMPANY' | 'OTHER'


