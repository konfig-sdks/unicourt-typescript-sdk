/*
UniCourt Enterprise APIs

<button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button>


The version of the OpenAPI document: 1.0.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { AttorneyLawFirm } from './attorney-law-firm';
import { AttorneyType } from './attorney-type';
import { Contact } from './contact';
import { PartyAttorneyAssociations } from './party-attorney-associations';
import { PossibleNormAttorney } from './possible-norm-attorney';
import { PossibleNormLawFirm } from './possible-norm-law-firm';

/**
 * 
 * @export
 * @interface Attorney
 */
export interface Attorney {
    /**
     * ID for the attorney in this case. This ID is unique within a case and NOT across cases. If the same attorney were to appear in another case this ID would be different.
     * @type {string}
     * @memberof Attorney
     */
    'attorneyId': string;
    /**
     * 
     * @type {Array<AttorneyLawFirm>}
     * @memberof Attorney
     */
    'attorneyLawFirmArray': Array<AttorneyLawFirm>;
    /**
     * 
     * @type {AttorneyType}
     * @memberof Attorney
     */
    'attorneyType': AttorneyType | null;
    /**
     * The bar enrollment number of an attorney.
     * @type {string}
     * @memberof Attorney
     */
    'barNumber': string | null;
    /**
     * 
     * @type {Contact}
     * @memberof Attorney
     */
    'contact': Contact;
    /**
     * When was the attorney first fetched from the court site.
     * @type {string}
     * @memberof Attorney
     */
    'firstFetchDate': string;
    /**
     * First name of the attorney. This is normalized by UniCourt.
     * @type {string}
     * @memberof Attorney
     */
    'firstName': string | null;
    /**
     * Signifies if the attorney as this attorney type is currently isVisible or not for the case.
     * @type {boolean}
     * @memberof Attorney
     */
    'isVisible': boolean;
    /**
     * When was the attorney last fetched from the court site.
     * @type {string}
     * @memberof Attorney
     */
    'lastFetchDate': string;
    /**
     * Last name of the attorney. This is normalized by UniCourt.
     * @type {string}
     * @memberof Attorney
     */
    'lastName': string | null;
    /**
     * Middle name of the attorney. This is normalized by UniCourt.
     * @type {string}
     * @memberof Attorney
     */
    'middleName': string | null;
    /**
     * Name of the attorney as provided by Court.
     * @type {string}
     * @memberof Attorney
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Attorney
     */
    'namePrefix': string | null;
    /**
     * 
     * @type {string}
     * @memberof Attorney
     */
    'nameSuffix': string | null;
    /**
     * Name of the object
     * @type {string}
     * @memberof Attorney
     */
    'object': string;
    /**
     * 
     * @type {PartyAttorneyAssociations}
     * @memberof Attorney
     */
    'partyAttorneyAssociations': PartyAttorneyAssociations | null;
    /**
     * Party Role Group Id for a Attorney.
     * @type {Array<string>}
     * @memberof Attorney
     */
    'partyRoleGroupIdArray': Array<string>;
    /**
     * Party Role Id for a Attorney.
     * @type {Array<string>}
     * @memberof Attorney
     */
    'partyRoleIdArray': Array<string>;
    /**
     * 
     * @type {Array<PossibleNormAttorney>}
     * @memberof Attorney
     */
    'possibleNormAttorneyArray': Array<PossibleNormAttorney>;
    /**
     * Possible Norm Lawfirm array for a Attorney.
     * @type {Array<PossibleNormLawFirm>}
     * @memberof Attorney
     */
    'possibleNormLawFirmArray': Array<PossibleNormLawFirm>;
    /**
     * Attorney Type as provided by Court.
     * @type {string}
     * @memberof Attorney
     */
    'sourceAttorneyType': string;
}

